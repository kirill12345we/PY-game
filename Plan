import pgzrun
from pgzero.builtins import *
import random

WIDTH = 480
HEIGHT = 320

lvl = 1
lvl_setup = [
    # Lvl 1
    [(2, HEIGHT-60), (15, HEIGHT-60), (10, HEIGHT-30)],
    # Lvl 2
    [(2, HEIGHT-60), (15, HEIGHT-60), (10, HEIGHT-30), (30, HEIGHT-60), (45, HEIGHT-60), (40, HEIGHT-30)],
    # Lvl 3
    [(2, HEIGHT-60), (15, HEIGHT-60), (10, HEIGHT-30), (30, HEIGHT-60), (45, HEIGHT-60), (40, HEIGHT-30), (60, HEIGHT-60), (75, HEIGHT-60), (70, HEIGHT-30)],
]


def setup_lvl():
    plats = []
    for pos in lvl_setup[lvl-1]:
        p = platform(pos[0]*32, pos[1]*32, pos[2]*32)
        plats.append(p)
    return plats


def update_lvl(plats):
    for p in plats:
        p.x -= 2
        if p.x + p.width < 0:
            p.x += WIDTH
    return plats


class player(Actor):
    def __init__(self, x, y):
        super().__init__('dk', (x, y))
        self.score = 0
        self.dead = False

    def jump(self):
        if self.y == HEIGHT-64:
            self.dy = -15

    def update(self):
        if self.dead:
            self.image = 'dk_dead'
            self.dy = 5
            self.y += self.dy
            if self.y > HEIGHT:
                self.y = HEIGHT
                lvl = 1
                plats = setup_lvl()
        else:
            self.dy = 2
            self.y += self.dy
            if self.y > HEIGHT-64:
                self.y = HEIGHT-64
            self.image = 'dk_jump'
            for p in plats:
                if self.colliderect(p):
                    self.y = p.y - self.height
                    self.dy = 0
                    break

class platform(Actor):
    def __init__(self, x, y, w):
        super().__init__('brick', (x, y))
        self.width = w * 32
        self.x = x - self.width/2


plats = setup_lvl()
player = player(100, HEIGHT-64)

def draw():
    screen.fill((0, 128, 255))
    player.draw()
    for p in plats:
        p.draw()
    screen.draw.text("Score: "+str(player.score), topleft=(5,5), color=(0,0,0))

def update(dt):
    player.update()
    plats = update_lvl(plats)

pgzrun.go()